Add support for NVIDIA vGPU

When NVIDIA vGPU is used, demu emulates something very similar to QEMU's
stdvga. Tweak the code to support it.
diff --git a/OvmfPkg/QemuVideoDxe/Driver.c b/OvmfPkg/QemuVideoDxe/Driver.c
index b91909a14e..e4df1ee9f5 100644
--- a/OvmfPkg/QemuVideoDxe/Driver.c
+++ b/OvmfPkg/QemuVideoDxe/Driver.c
@@ -69,6 +69,12 @@ QEMU_VIDEO_CARD  gQemuVideoCardList[] = {
     0x0405,
     QEMU_VIDEO_VMWARE_SVGA,
     L"QEMU VMWare SVGA"
+  },{
+    PCI_CLASS_DISPLAY_VGA,
+    0x10de,
+    0,
+    QEMU_VIDEO_BOCHS_NVIDIA,
+    L"NVIDIA vGPU"
   },{
     0     /* end of list */
   }
@@ -86,7 +92,8 @@ QemuVideoDetect (
   while (gQemuVideoCardList[Index].VendorId != 0) {
     if ((gQemuVideoCardList[Index].SubClass == SubClass) &&
         (gQemuVideoCardList[Index].VendorId == VendorId) &&
-        (gQemuVideoCardList[Index].DeviceId == DeviceId))
+        ((gQemuVideoCardList[Index].DeviceId == DeviceId) ||
+         (gQemuVideoCardList[Index].VendorId == 0x10de)))
     {
       return gQemuVideoCardList + Index;
     }
@@ -420,6 +427,7 @@ QemuVideoControllerDriverStart (
       Status = QemuVideoCirrusModeSetup (Private);
       break;
     case QEMU_VIDEO_BOCHS_MMIO:
+    case QEMU_VIDEO_BOCHS_NVIDIA:
     case QEMU_VIDEO_BOCHS:
       Status = QemuVideoBochsModeSetup (Private, IsQxl);
       break;
@@ -1019,7 +1027,8 @@ InitializeBochsGraphicsMode (
     );
 
   SetDefaultPalette (Private);
-  ClearScreen (Private);
+  if (Private->Variant != QEMU_VIDEO_BOCHS_NVIDIA)
+    ClearScreen (Private);
 }
 
 EFI_STATUS
diff --git a/OvmfPkg/QemuVideoDxe/Gop.c b/OvmfPkg/QemuVideoDxe/Gop.c
index 7a9fe208c9..3ff71e2317 100644
--- a/OvmfPkg/QemuVideoDxe/Gop.c
+++ b/OvmfPkg/QemuVideoDxe/Gop.c
@@ -66,7 +66,12 @@ QemuVideoCompleteModeData (
                     (VOID **)&FrameBufDesc
                     );
 
-  Mode->FrameBufferBase = FrameBufDesc->AddrRangeMin;
+  if (Private->Variant == QEMU_VIDEO_BOCHS_NVIDIA)
+    Mode->FrameBufferBase = ((EFI_PHYSICAL_ADDRESS)BochsRead (Private,
+                                 VBE_DISPI_INDEX_LFB_ADDRESS_H)) << 16 |
+                             BochsRead (Private, VBE_DISPI_INDEX_LFB_ADDRESS_L);
+  else
+    Mode->FrameBufferBase = FrameBufDesc->AddrRangeMin;
   Mode->FrameBufferSize = Info->HorizontalResolution * Info->VerticalResolution;
   Mode->FrameBufferSize = Mode->FrameBufferSize * ((ModeData->ColorDepth + 7) / 8);
   Mode->FrameBufferSize = EFI_PAGES_TO_SIZE (
@@ -183,6 +188,7 @@ Routine Description:
       InitializeCirrusGraphicsMode (Private, &QemuVideoCirrusModes[ModeData->InternalModeIndex]);
       break;
     case QEMU_VIDEO_BOCHS_MMIO:
+    case QEMU_VIDEO_BOCHS_NVIDIA:
     case QEMU_VIDEO_BOCHS:
       InitializeBochsGraphicsMode (Private, ModeData);
       break;
diff --git a/OvmfPkg/QemuVideoDxe/Qemu.h b/OvmfPkg/QemuVideoDxe/Qemu.h
index 57341a0bbf..6dce753f3d 100644
--- a/OvmfPkg/QemuVideoDxe/Qemu.h
+++ b/OvmfPkg/QemuVideoDxe/Qemu.h
@@ -85,6 +85,7 @@ typedef enum {
   QEMU_VIDEO_CIRRUS_5446,
   QEMU_VIDEO_BOCHS,
   QEMU_VIDEO_BOCHS_MMIO,
+  QEMU_VIDEO_BOCHS_NVIDIA,
   QEMU_VIDEO_VMWARE_SVGA,
 } QEMU_VIDEO_VARIANT;
 
@@ -185,6 +186,8 @@ extern EFI_COMPONENT_NAME2_PROTOCOL  gQemuVideoComponentName2;
 #define VBE_DISPI_INDEX_X_OFFSET          0x8
 #define VBE_DISPI_INDEX_Y_OFFSET          0x9
 #define VBE_DISPI_INDEX_VIDEO_MEMORY_64K  0xa
+#define VBE_DISPI_INDEX_LFB_ADDRESS_H    0xb
+#define VBE_DISPI_INDEX_LFB_ADDRESS_L    0xc
 
 #define VBE_DISPI_ID0  0xB0C0
 #define VBE_DISPI_ID1  0xB0C1
